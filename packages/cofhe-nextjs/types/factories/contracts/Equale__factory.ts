/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Equale, EqualeInterface } from "../../contracts/Equale";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "got",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "expected",
        type: "uint8",
      },
    ],
    name: "InvalidEncryptedInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int32",
        name: "value",
        type: "int32",
      },
    ],
    name: "SecurityZoneOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PlayerGuess",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PlayerWon",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWO",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameEquation",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameResult",
    outputs: [
      {
        internalType: "euint16",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ctHash",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "securityZone",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct InEuint8[5]",
        name: "equationGuess",
        type: "tuple[5]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "ctHash",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "securityZone",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct InEuint16",
        name: "resultGuess",
        type: "tuple",
      },
    ],
    name: "guess",
    outputs: [
      {
        internalType: "euint8[5]",
        name: "EqAnswer",
        type: "uint256[5]",
      },
      {
        internalType: "euint8",
        name: "resultAnswer",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b5042608081815250506100275f61008f60201b60201c565b5f8190555061003c600161008f60201b60201c565b600181905550610052600261008f60201b60201c565b6002819055506100685f546100a760201b60201c565b6100796001546100a760201b60201c565b61008a6002546100a760201b60201c565b61065b565b5f6100a0825f61012660201b60201c565b9050919050565b73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff166365d0509c82306040518363ffffffff1660e01b81526004016100f69291906103b7565b5f604051808303815f87803b15801561010d575f80fd5b505af115801561011f573d5f803e3d5ffd5b5050505050565b5f8061013a8460028561014660201b60201c565b90508091505092915050565b5f73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff16631888debd84601a5f67ffffffffffffffff811115610194576101936103de565b5b6040519080825280602002602001820160405280156101c25781602001602082028036833780820191505090505b506101e5898960ff166101da8a61024d60201b60201c565b6102a460201b60201c565b6040518563ffffffff1660e01b81526004016102049493929190610550565b6020604051808303815f875af1158015610220573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024491906105cf565b90509392505050565b5f808260030b121561029657816040517f8f568bf800000000000000000000000000000000000000000000000000000000815260040161028d9190610615565b60405180910390fd5b8163ffffffff169050919050565b60605f600367ffffffffffffffff8111156102c2576102c16103de565b5b6040519080825280602002602001820160405280156102f05781602001602082028036833780820191505090505b50905084815f815181106103075761030661062e565b5b60200260200101818152505083816001815181106103285761032761062e565b5b60200260200101818152505082816002815181106103495761034861062e565b5b602002602001018181525050809150509392505050565b5f819050919050565b61037281610360565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103a182610378565b9050919050565b6103b181610397565b82525050565b5f6040820190506103ca5f830185610369565b6103d760208301846103a8565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60ff82169050919050565b6104208161040b565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6020811061046457610463610426565b5b50565b5f81905061047482610453565b919050565b5f61048382610467565b9050919050565b61049381610479565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6104cb81610360565b82525050565b5f6104dc83836104c2565b60208301905092915050565b5f602082019050919050565b5f6104fe82610499565b61050881856104a3565b9350610513836104b3565b805f5b8381101561054357815161052a88826104d1565b9750610535836104e8565b925050600181019050610516565b5085935050505092915050565b5f6080820190506105635f830187610417565b610570602083018661048a565b818103604083015261058281856104f4565b9050818103606083015261059681846104f4565b905095945050505050565b5f80fd5b6105ae81610360565b81146105b8575f80fd5b50565b5f815190506105c9816105a5565b92915050565b5f602082840312156105e4576105e36105a1565b5b5f6105f1848285016105bb565b91505092915050565b5f8160030b9050919050565b61060f816105fa565b82525050565b5f6020820190506106285f830184610606565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b608051611ab361067a5f395f818161030e015261050a0152611ab35ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063a26354011161006f578063a2635401146101a0578063bbaa1ae1146101be578063c2ee3a08146101ef578063e0d65b691461020d578063e6fd48bc1461023d578063f1ddf9d71461025b576100b2565b806327cfe856146100b657806334945b3a146100d4578063379f597e146100f257806358fa63ca1461012257806382b813dc146101405780638530b17614610170575b5f80fd5b6100be61028b565b6040516100cb9190610f3f565b60405180910390f35b6100dc610292565b6040516100e99190610f91565b60405180910390f35b61010c60048036038101906101079190610fe5565b610298565b6040516101199190610f91565b60405180910390f35b61012a6102bc565b6040516101379190610f91565b60405180910390f35b61015a6004803603810190610155919061107d565b6102c1565b6040516101679190610f3f565b60405180910390f35b61018a600480360381019061018591906110a8565b6102d6565b6040516101979190610f91565b60405180910390f35b6101a8610305565b6040516101b59190610f3f565b60405180910390f35b6101d860048036038101906101d3919061113f565b610351565b6040516101e692919061125a565b60405180910390f35b6101f76104ed565b6040516102049190610f91565b60405180910390f35b61022760048036038101906102229190611281565b6104f3565b60405161023491906112bb565b60405180910390f35b610245610508565b6040516102529190610f3f565b60405180910390f35b610275600480360381019061027091906112d4565b61052c565b604051610282919061132c565b60405180910390f35b6201518081565b60025481565b6006602052815f5260405f2081600581106102b1575f80fd5b015f91509150505481565b5f5481565b6007602052805f5260405f205f915090505481565b6003602052825f5260405f20602052815f5260405f2081600581106102f9575f80fd5b015f9250925050505481565b5f6001620151807f0000000000000000000000000000000000000000000000000000000000000000426103389190611372565b61034291906113d2565b61034c9190611402565b905090565b610359610eda565b5f80610363610305565b90505f6103788561037390611640565b610556565b9050610382610eda565b5f5b600581101561048d576103c18882600581106103a3576103a2611652565b5b6020028101906103b39190611683565b6103bc9061173b565b6105c9565b8282600581106103d4576103d3611652565b5b6020020181815250505f6104238383600581106103f4576103f3611652565b5b602002015160065f8881526020019081526020015f20846005811061041c5761041b611652565b5b015461063c565b90505f61044684846005811061043c5761043b611652565b5b6020020151610685565b9050610462825f5461045d84600154600254610727565b610727565b88846005811061047557610474611652565b5b60200201818152505050508080600101915050610384565b505f6104aa8360055f8781526020019081526020015f2054610789565b90506104e0815f546104db6104d08760055f8b81526020019081526020015f20546107d2565b600154600254610727565b610727565b9450505050509250929050565b60015481565b6005602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f80600390508060ff16836040015160ff16146105b0578260400151816040517f67cf30710000000000000000000000000000000000000000000000000000000081526004016105a792919061175c565b60405180910390fd5b6105c16105bc8461081b565b61085d565b915050919050565b5f80600290508060ff16836040015160ff1614610623578260400151816040517f67cf307100000000000000000000000000000000000000000000000000000000815260040161061a92919061175c565b60405180910390fd5b61063461062f846108f4565b61085d565b915050919050565b5f61064683610936565b610656576106535f610947565b92505b61065f82610936565b61066f5761066c5f610947565b91505b61067d600284846018610959565b905092915050565b5f8061068f610305565b90505f6106c08460065f8581526020019081526020015f205f600581106106b9576106b8611652565b5b015461063c565b90505f600190505b600581101561071c575f6107008660065f8781526020019081526020015f2084600581106106f9576106f8611652565b5b015461063c565b905061070c8382610a48565b92505080806001019150506106c8565b508092505050919050565b5f61073184610a92565b6107415761073e5f610aa3565b93505b61074a83610936565b61075a576107575f610947565b92505b61076382610936565b610773576107705f610947565b91505b6107806002858585610ab5565b90509392505050565b5f61079383610ba6565b6107a3576107a05f610bb7565b92505b6107ac82610ba6565b6107bc576107b95f610bb7565b91505b6107ca600384846018610959565b905092915050565b5f6107dc83610ba6565b6107ec576107e95f610bb7565b92505b6107f582610ba6565b610805576108025f610bb7565b91505b610813600384846014610959565b905092915050565b610823610efc565b6040518060800160405280835f01518152602001836020015160ff168152602001600360ff16815260200183606001518152509050919050565b5f73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff166327f9c76283336040518363ffffffff1660e01b81526004016108ad929190611870565b6020604051808303815f875af11580156108c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ed91906118b2565b9050919050565b6108fc610efc565b6040518060800160405280835f01518152602001836020015160ff168152602001600260ff16815260200183606001518152509050919050565b5f61094082610bc9565b9050919050565b5f610952825f610bd5565b9050919050565b5f73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff16631888debd86846109968888610bef565b5f67ffffffffffffffff8111156109b0576109af611449565b5b6040519080825280602002602001820160405280156109de5781602001602082028036833780820191505090505b506040518563ffffffff1660e01b81526004016109fe94939291906119f8565b6020604051808303815f875af1158015610a1a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3e91906118b2565b9050949350505050565b5f610a5283610a92565b610a6357610a606001610aa3565b92505b610a6c82610a92565b610a7d57610a7a6001610aa3565b91505b610a8a5f8484600b610959565b905092915050565b5f610a9c82610bc9565b9050919050565b5f610aae825f610c89565b9050919050565b5f73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff16631888debd866004610af4888888610cb2565b5f67ffffffffffffffff811115610b0e57610b0d611449565b5b604051908082528060200260200182016040528015610b3c5781602001602082028036833780820191505090505b506040518563ffffffff1660e01b8152600401610b5c94939291906119f8565b6020604051808303815f875af1158015610b78573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b9c91906118b2565b9050949350505050565b5f610bb082610bc9565b9050919050565b5f610bc2825f610d6e565b9050919050565b5f808214159050919050565b5f80610be384600285610d88565b90508091505092915050565b60605f600267ffffffffffffffff811115610c0d57610c0c611449565b5b604051908082528060200260200182016040528015610c3b5781602001602082028036833780820191505090505b50905083815f81518110610c5257610c51611652565b5b6020026020010181815250508281600181518110610c7357610c72611652565b5b6020026020010181815250508091505092915050565b5f805f90508315610c9957600190505b5f610ca5825f86610d88565b9050809250505092915050565b60605f600367ffffffffffffffff811115610cd057610ccf611449565b5b604051908082528060200260200182016040528015610cfe5781602001602082028036833780820191505090505b50905084815f81518110610d1557610d14611652565b5b6020026020010181815250508381600181518110610d3657610d35611652565b5b6020026020010181815250508281600281518110610d5757610d56611652565b5b602002602001018181525050809150509392505050565b5f80610d7c84600385610d88565b90508091505092915050565b5f73ea30c4b8b44078bbf8a6ef5b9f1ec1626c7848d973ffffffffffffffffffffffffffffffffffffffff16631888debd84601a5f67ffffffffffffffff811115610dd657610dd5611449565b5b604051908082528060200260200182016040528015610e045781602001602082028036833780820191505090505b50610e1b898960ff16610e168a610e83565b610cb2565b6040518563ffffffff1660e01b8152600401610e3a94939291906119f8565b6020604051808303815f875af1158015610e56573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e7a91906118b2565b90509392505050565b5f808260030b1215610ecc57816040517f8f568bf8000000000000000000000000000000000000000000000000000000008152600401610ec39190611a64565b60405180910390fd5b8163ffffffff169050919050565b6040518060a00160405280600590602082028036833780820191505090505090565b60405180608001604052805f81526020015f60ff1681526020015f60ff168152602001606081525090565b5f819050919050565b610f3981610f27565b82525050565b5f602082019050610f525f830184610f30565b92915050565b5f819050919050565b5f610f7b610f76610f7184610f27565b610f58565b610f27565b9050919050565b610f8b81610f61565b82525050565b5f602082019050610fa45f830184610f82565b92915050565b5f604051905090565b5f80fd5b5f80fd5b610fc481610f27565b8114610fce575f80fd5b50565b5f81359050610fdf81610fbb565b92915050565b5f8060408385031215610ffb57610ffa610fb3565b5b5f61100885828601610fd1565b925050602061101985828601610fd1565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104c82611023565b9050919050565b61105c81611042565b8114611066575f80fd5b50565b5f8135905061107781611053565b92915050565b5f6020828403121561109257611091610fb3565b5b5f61109f84828501611069565b91505092915050565b5f805f606084860312156110bf576110be610fb3565b5b5f6110cc86828701610fd1565b93505060206110dd86828701611069565b92505060406110ee86828701610fd1565b9150509250925092565b5f80fd5b5f81905082602060050282011115611117576111166110f8565b5b92915050565b5f80fd5b5f608082840312156111365761113561111d565b5b81905092915050565b5f806040838503121561115557611154610fb3565b5b5f83013567ffffffffffffffff81111561117257611171610fb7565b5b61117e858286016110fc565b925050602083013567ffffffffffffffff81111561119f5761119e610fb7565b5b6111ab85828601611121565b9150509250929050565b5f60059050919050565b5f81905092915050565b5f819050919050565b6111db81610f61565b82525050565b5f6111ec83836111d2565b60208301905092915050565b5f602082019050919050565b61120d816111b5565b61121781846111bf565b9250611222826111c9565b805f5b8381101561125257815161123987826111e1565b9650611244836111f8565b925050600181019050611225565b505050505050565b5f60c08201905061126d5f830185611204565b61127a60a0830184610f82565b9392505050565b5f6020828403121561129657611295610fb3565b5b5f6112a384828501610fd1565b91505092915050565b6112b581610f61565b82525050565b5f6020820190506112ce5f8301846112ac565b92915050565b5f80604083850312156112ea576112e9610fb3565b5b5f6112f785828601610fd1565b925050602061130885828601611069565b9150509250929050565b5f8115159050919050565b61132681611312565b82525050565b5f60208201905061133f5f83018461131d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61137c82610f27565b915061138783610f27565b925082820390508181111561139f5761139e611345565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113dc82610f27565b91506113e783610f27565b9250826113f7576113f66113a5565b5b828204905092915050565b5f61140c82610f27565b915061141783610f27565b925082820190508082111561142f5761142e611345565b5b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61147f82611439565b810181811067ffffffffffffffff8211171561149e5761149d611449565b5b80604052505050565b5f6114b0610faa565b90506114bc8282611476565b919050565b5f80fd5b5f60ff82169050919050565b6114da816114c5565b81146114e4575f80fd5b50565b5f813590506114f5816114d1565b92915050565b5f80fd5b5f80fd5b5f67ffffffffffffffff82111561151d5761151c611449565b5b61152682611439565b9050602081019050919050565b828183375f83830152505050565b5f61155361154e84611503565b6114a7565b90508281526020810184848401111561156f5761156e6114ff565b5b61157a848285611533565b509392505050565b5f82601f830112611596576115956114fb565b5b81356115a6848260208601611541565b91505092915050565b5f608082840312156115c4576115c3611435565b5b6115ce60806114a7565b90505f6115dd84828501610fd1565b5f8301525060206115f0848285016114e7565b6020830152506040611604848285016114e7565b604083015250606082013567ffffffffffffffff811115611628576116276114c1565b5b61163484828501611582565b60608301525092915050565b5f61164b36836115af565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f8235600160800383360303811261169e5761169d61167f565b5b80830191505092915050565b5f608082840312156116bf576116be611435565b5b6116c960806114a7565b90505f6116d884828501610fd1565b5f8301525060206116eb848285016114e7565b60208301525060406116ff848285016114e7565b604083015250606082013567ffffffffffffffff811115611723576117226114c1565b5b61172f84828501611582565b60608301525092915050565b5f61174636836116aa565b9050919050565b611756816114c5565b82525050565b5f60408201905061176f5f83018561174d565b61177c602083018461174d565b9392505050565b61178c81610f27565b82525050565b61179b816114c5565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6117d3826117a1565b6117dd81856117ab565b93506117ed8185602086016117bb565b6117f681611439565b840191505092915050565b5f608083015f8301516118165f860182611783565b5060208301516118296020860182611792565b50604083015161183c6040860182611792565b506060830151848203606086015261185482826117c9565b9150508091505092915050565b61186a81611042565b82525050565b5f6040820190508181035f8301526118888185611801565b90506118976020830184611861565b9392505050565b5f815190506118ac81610fbb565b92915050565b5f602082840312156118c7576118c6610fb3565b5b5f6118d48482850161189e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6020811061191b5761191a6118dd565b5b50565b5f81905061192b8261190a565b919050565b5f61193a8261191e565b9050919050565b61194a81611930565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f6119848383611783565b60208301905092915050565b5f602082019050919050565b5f6119a682611950565b6119b0818561195a565b93506119bb8361196a565b805f5b838110156119eb5781516119d28882611979565b97506119dd83611990565b9250506001810190506119be565b5085935050505092915050565b5f608082019050611a0b5f83018761174d565b611a186020830186611941565b8181036040830152611a2a818561199c565b90508181036060830152611a3e818461199c565b905095945050505050565b5f8160030b9050919050565b611a5e81611a49565b82525050565b5f602082019050611a775f830184611a55565b9291505056fea264697066735822122059238d67bd676343bf633dff36d46f485b27f456d901a0b7bb8697ed5bcf157564736f6c63430008190033";

type EqualeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EqualeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Equale__factory extends ContractFactory {
  constructor(...args: EqualeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Equale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Equale__factory {
    return super.connect(runner) as Equale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EqualeInterface {
    return new Interface(_abi) as EqualeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Equale {
    return new Contract(address, _abi, runner) as unknown as Equale;
  }
}
