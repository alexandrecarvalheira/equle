/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITaskManager,
  ITaskManagerInterface,
} from "../../../../@fhenixprotocol/cofhe-contracts/ICofhe.sol/ITaskManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
    ],
    name: "allowGlobal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "allowTransient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "requestor",
        type: "address",
      },
    ],
    name: "createDecryptTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "returnType",
        type: "uint8",
      },
      {
        internalType: "enum FunctionId",
        name: "funcId",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "encryptedInputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "extraInputs",
        type: "uint256[]",
      },
    ],
    name: "createTask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
    ],
    name: "getDecryptResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
    ],
    name: "getDecryptResultSafe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ctHash",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ctHash",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "securityZone",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EncryptedInput",
        name: "input",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "verifyInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITaskManager__factory {
  static readonly abi = _abi;
  static createInterface(): ITaskManagerInterface {
    return new Interface(_abi) as ITaskManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITaskManager {
    return new Contract(address, _abi, runner) as unknown as ITaskManager;
  }
}
